{"version":3,"sources":["Components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","timerId","state","time","Date","toUTCString","slice","this","window","setInterval","setState","console","info","prevProps","clockName","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","clockNameTimerId","hasClock","hideClock","event","preventDefault","showClock","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"gMAYaA,EAAb,4MACEC,aADF,IAGEC,MAAoB,CAClBC,MAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IAJ/C,uDAOE,WAAqB,IAAD,OAClBC,KAAKN,QAAUO,OAAOC,aAAY,WAChC,EAAKC,SAAS,CACZP,MAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,KAE7CK,QAAQC,KAAK,EAAKV,MAAMC,QACvB,OAbP,gCAgBE,SAAmBU,GACbA,EAAUC,YAAcP,KAAKQ,MAAMD,WACrCH,QAAQK,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDP,KAAKQ,MAAMD,cAlBzE,kCAsBE,WACMP,KAAKN,SACPO,OAAOS,cAAcV,KAAKN,WAxBhC,oBA4BE,WACE,OACE,sBAAKiB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGX,KAAKQ,MAAMD,YAGb,YAED,sBAAMI,UAAU,cAAhB,SACGX,KAAKL,MAAMC,cAtCtB,GAA2BgB,IAAMC,WCRjC,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWlB,OAAO,GAE3C,MAAM,SAAN,OAAgBgB,GAQX,IAAMG,EAAb,4MACEC,sBADF,IAGExB,MAAkB,CAChBY,UAAW,UACXa,UAAU,GALd,EA2BEC,UAAY,SAACC,GACXA,EAAMC,iBACN,EAAKpB,SAAS,CAAEiB,UAAU,KA7B9B,EAgCEI,UAAY,WACV,EAAKrB,SAAS,CAAEiB,UAAU,KAjC9B,uDAQE,WAAqB,IAAD,OAClBpB,KAAKmB,iBAAmBlB,OAAOC,aAAY,WACzC,EAAKC,SAAS,CACZI,UAAWO,QAEZ,MACHW,SAASC,iBAAiB,cAAe1B,KAAKqB,WAC9CI,SAASC,iBAAiB,QAAS1B,KAAKwB,aAf5C,kCAkBE,WACMxB,KAAKmB,kBACPlB,OAAOS,cAAcV,KAAKmB,kBAG5BM,SAASE,oBAAoB,cAAe3B,KAAKqB,WACjDI,SAASE,oBAAoB,QAAS3B,KAAKwB,aAxB/C,oBAoCE,WACE,MAAgCxB,KAAKL,MAA7BY,EAAR,EAAQA,UAAWa,EAAnB,EAAmBA,SAEnB,OACE,qBAAKT,UAAU,MAAf,SACIS,GACA,qCACE,6CACA,cAAC,EAAD,CAAOb,UAAWA,aA5C9B,GAAyBK,IAAMC,WCZ/Be,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,U","file":"static/js/main.d1cca79c.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport '../App.scss';\n\ntype ClockState = {\n  time: string;\n};\n\ntype ClockProps = {\n  clockName: string;\n};\n\nexport class Clock extends React.Component <ClockProps, ClockState> {\n  timerId: number | undefined;\n\n  state: ClockState = {\n    time: new Date().toUTCString().slice(-12, -4),\n  };\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({\n        time: new Date().toUTCString().slice(-12, -4),\n      });\n      console.info(this.state.time);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: { clockName: string }) {\n    if (prevProps.clockName !== this.props.clockName) {\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      window.clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.time}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype AppState = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nexport class App extends React.Component <{}, AppState > {\n  clockNameTimerId: number | undefined;\n\n  state: AppState = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  componentDidMount() {\n    this.clockNameTimerId = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n    document.addEventListener('contextmenu', this.hideClock);\n    document.addEventListener('click', this.showClock);\n  }\n\n  componentWillUnmount() {\n    if (this.clockNameTimerId) {\n      window.clearInterval(this.clockNameTimerId);\n    }\n\n    document.removeEventListener('contextmenu', this.hideClock);\n    document.removeEventListener('click', this.showClock);\n  }\n\n  hideClock = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  showClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        { hasClock && (\n          <>\n            <h1>React clock</h1>\n            <Clock clockName={clockName} />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}